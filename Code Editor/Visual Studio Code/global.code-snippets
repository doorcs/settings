// `Snippets: Configure Snippets` 실행 후 `New Global Snippets file` 선택하고 `global` 입력, 생성된 파일에 붙여넣기
{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "Java PS": {
    "scope": "java",
    "prefix": "ps",
    "body": [
      "import java.io.*;",
      "import java.util.*;",
      "",
      "public class Main {",
      "",
      "    public static void main(String[] args) throws IOException {",
      "        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));",
      "        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));",
      "",
      "        $0",
      "",
      "        bw.flush();",
      "        bw.close();",
      "        br.close();",
      "    }",
      "}",
      "",
    ],
    "description": "Java PS 템플릿"
  },
  "C++ PS": {
    "scope": "cpp",
    "prefix": "ps",
    "body": [
      "#include <bits/stdc++.h>",
      "",
      "using namespace std;",
      "using ll = long long;",
      "",
      "int main() {",
      "  cin.tie(nullptr);",
      "  cout.tie(nullptr);",
      "  ios_base::sync_with_stdio(false);",
      "",
      "  $0",
      "}",
      ""
    ],
    "description": "C++ PS 템플릿"
  },
}
